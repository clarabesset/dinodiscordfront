{"ast":null,"code":"var _jsxFileName = \"/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/components/Board.jsx\";\nimport React, { Component } from 'react';\nimport Cell from './Cell';\nimport DinoPicker from '../pages/DinoPicker';\nimport Result from '../pages/Result';\nexport default class Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentGrid: [{}],\n      players: [{\n        id: 1\n      }, {\n        id: 2\n      }],\n      step: 1\n    };\n  }\n\n  componentDidMount() {\n    this.generateGrid();\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random(min) * Math.floor(max));\n  }\n\n  get2RandCellIndexes() {\n    const indexes = [];\n\n    do {\n      const nb = this.getRandomInt(1, 98);\n      if (!indexes.includes(nb)) indexes.push(nb);\n    } while (indexes.length !== 2);\n\n    return indexes;\n  }\n\n  generateGrid() {\n    const grid = [];\n    const indexes = this.get2RandCellIndexes();\n    var count = 0; // const player1 = this.state.currentGrid[0];\n\n    for (let i = 0; i <= 9; i++) {\n      for (let j = 0; j <= 9; j++) {\n        const pos = indexes.indexOf(count); // if not found => return -1\n\n        if (count === 0 || count === 99) {\n          grid.push({\n            x: i,\n            y: j,\n            taken: true,\n            color: null,\n            player: this.state.players[count === 0 ? 0 : 99],\n            meteorite: false\n          });\n        } else {\n          grid.push({\n            x: i,\n            y: j,\n            taken: pos !== -1 ? true : false,\n            color: null,\n            meteorite: pos !== -1 ? true : false\n          });\n        }\n\n        count++; // gui@check ça suis pas sûr\n      }\n    }\n\n    this.setState({\n      currentGrid: grid\n    });\n  }\n\n  render() {\n    console.log(\"youpi\");\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.step === 1 && React.createElement(DinoPicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.state.step === 2 && React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.currentGrid.length && this.state.currentGrid.map((cell, i) => {\n      return React.createElement(Cell, {\n        key: i,\n        cell: cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    })), this.state.step === 3 && React.createElement(Result, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })); // );\n  }\n\n}","map":{"version":3,"sources":["/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/components/Board.jsx"],"names":["React","Component","Cell","DinoPicker","Result","Board","constructor","props","state","currentGrid","players","id","step","componentDidMount","generateGrid","getRandomInt","min","max","Math","floor","random","get2RandCellIndexes","indexes","nb","includes","push","length","grid","count","i","j","pos","indexOf","x","y","taken","color","player","meteorite","setState","render","console","log","map","cell"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Cell from './Cell';\nimport DinoPicker from '../pages/DinoPicker';\nimport Result from '../pages/Result'\n\nexport default class Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentGrid: [ {} ],\n\t\t\tplayers: [ { id: 1 }, { id: 2 } ],\n\t\t\tstep: 1\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tthis.generateGrid();\n\t}\n\n\tgetRandomInt(min, max) {\n\t\treturn Math.floor(Math.random(min) * Math.floor(max));\n\t}\n\n\tget2RandCellIndexes() {\n\t\tconst indexes = [];\n\t\tdo {\n\t\t\tconst nb = this.getRandomInt(1, 98);\n\t\t\tif (!indexes.includes(nb)) indexes.push(nb);\n\t\t} while (indexes.length !== 2);\n\t\treturn indexes;\n\t}\n\n\tgenerateGrid() {\n\t\tconst grid = [];\n\t\tconst indexes = this.get2RandCellIndexes();\n\t\tvar count = 0;\n\t\t// const player1 = this.state.currentGrid[0];\n\n\t\tfor (let i = 0; i <= 9; i++) {\n\t\t\tfor (let j = 0; j <= 9; j++) {\n\t\t\t\tconst pos = indexes.indexOf(count); // if not found => return -1\n\t\t\t\tif (count === 0 || count === 99) {\n\t\t\t\t\tgrid.push({\n\t\t\t\t\t\tx: i,\n\t\t\t\t\t\ty: j,\n\t\t\t\t\t\ttaken: true,\n\t\t\t\t\t\tcolor: null,\n\t\t\t\t\t\tplayer: this.state.players[count === 0 ? 0 : 99],\n\t\t\t\t\t\tmeteorite: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tgrid.push({\n\t\t\t\t\t\tx: i,\n\t\t\t\t\t\ty: j,\n\t\t\t\t\t\ttaken: pos !== -1 ? true : false,\n\t\t\t\t\t\tcolor: null,\n\t\t\t\t\t\tmeteorite: pos !== -1 ? true : false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcount++; // gui@check ça suis pas sûr\n\t\t\t}\n\t\t}\n\t\tthis.setState({ currentGrid: grid });\n\t}\n\n\trender() {\n    console.log(\"youpi\")\n\t\treturn (\n\t\t\t<React.Fragment>\n      {this.state.step === 1 && <DinoPicker />}\n      {this.state.step === 2 && <div className=\"board\">\n\t\t{this.state.currentGrid.length &&\n\t\tthis.state.currentGrid.map((cell, i) => {\n\t\treturn <Cell key={i} cell={cell} />;\n\t\t})}\n\t\t</div> }\n      {this.state.step === 3 && <Result />}\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\t\n\t\t// );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}