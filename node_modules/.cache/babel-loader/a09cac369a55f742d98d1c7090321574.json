{"ast":null,"code":"var _jsxFileName = \"/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/pages/Intro.jsx\";\nimport React, { Component } from \"react\";\nimport IntroText1 from \"../components/IntroText1\";\nimport IntroText2 from \"../components/IntroText2\";\nimport IntroText3 from \"../components/IntroText3\";\nimport IntroText4 from \"../components/IntroText4\";\nexport default class Intro extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentIndex: 0,\n      texts: [\"Somewhere on earth, about 65.2 million years ago...\", \"foo\", \"bar\", \"baz\"]\n    };\n  }\n\n  getInitialState() {\n    let state = {};\n    React.Children.forEach(this.props.children, (child, index) => {\n      state[index] = false;\n    });\n    return state;\n  }\n\n  componentDidMount() {\n    return setTimeout(() => {\n      const x = this.state.currentIndex + 1;\n      this.setState({\n        currentIndex: x\n      });\n    }, 5000); // this.timeouts = React.Children.forEach(\n    //   this.props.children,\n    //   (child, index) => {\n    //     return setTimeout(() => {\n    //       this.setState({ currentIndex: this.state.currentIndex + 1 });\n    //     }, 5000);\n    //   }\n    // );\n  } // let children = React.Children.map(this.props.children, (child, index) => {\n  //     return React.cloneElement(child, {doRender: this.state[index]});\n  // });\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(IntroText1, {\n      text: this.state.texts[this.state.currentIndex],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/pages/Intro.jsx"],"names":["React","Component","IntroText1","IntroText2","IntroText3","IntroText4","Intro","state","currentIndex","texts","getInitialState","Children","forEach","props","children","child","index","componentDidMount","setTimeout","x","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CM,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,CADR;AAENC,MAAAA,KAAK,EAAE,CACL,qDADK,EAEL,KAFK,EAGL,KAHK,EAIL,KAJK;AAFD,KADmC;AAAA;;AAU3CC,EAAAA,eAAe,GAAG;AAChB,QAAIH,KAAK,GAAG,EAAZ;AACAP,IAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuB,KAAKC,KAAL,CAAWC,QAAlC,EAA4C,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5DT,MAAAA,KAAK,CAACS,KAAD,CAAL,GAAe,KAAf;AACD,KAFD;AAGA,WAAOT,KAAP;AACD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,WAAOC,UAAU,CAAC,MAAM;AACtB,YAAMC,CAAC,GAAG,KAAKZ,KAAL,CAAWC,YAAX,GAA0B,CAApC;AACA,WAAKY,QAAL,CAAc;AAAEZ,QAAAA,YAAY,EAAEW;AAAhB,OAAd;AACD,KAHgB,EAGd,IAHc,CAAjB,CADkB,CAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/B0C,CAiC3C;AACA;AACA;;;AAEAE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWE,KAAX,CAAiB,KAAKF,KAAL,CAAWC,YAA5B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAQD;;AA9C0C","sourcesContent":["import React, { Component } from \"react\";\nimport IntroText1 from \"../components/IntroText1\";\nimport IntroText2 from \"../components/IntroText2\";\nimport IntroText3 from \"../components/IntroText3\";\nimport IntroText4 from \"../components/IntroText4\";\n\nexport default class Intro extends Component {\n  state = {\n    currentIndex: 0,\n    texts: [\n      \"Somewhere on earth, about 65.2 million years ago...\",\n      \"foo\",\n      \"bar\",\n      \"baz\"\n    ]\n  };\n  getInitialState() {\n    let state = {};\n    React.Children.forEach(this.props.children, (child, index) => {\n      state[index] = false;\n    });\n    return state;\n  }\n\n  componentDidMount() {\n    return setTimeout(() => {\n      const x = this.state.currentIndex + 1;\n      this.setState({ currentIndex: x });\n    }, 5000);\n    // this.timeouts = React.Children.forEach(\n    //   this.props.children,\n    //   (child, index) => {\n    //     return setTimeout(() => {\n    //       this.setState({ currentIndex: this.state.currentIndex + 1 });\n    //     }, 5000);\n    //   }\n    // );\n  }\n\n  // let children = React.Children.map(this.props.children, (child, index) => {\n  //     return React.cloneElement(child, {doRender: this.state[index]});\n  // });\n\n  render() {\n    return (\n      <div>\n        <IntroText1 text={this.state.texts[this.state.currentIndex]} />\n        {/* <IntroText2 />\n        <IntroText3 />\n        <IntroText4 /> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}