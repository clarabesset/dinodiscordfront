{"ast":null,"code":"var _jsxFileName = \"/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/components/DinoPicker.jsx\";\nimport React, { Component } from 'react';\nimport blue from './../img/blue_dino_short.gif';\nimport green from './../img/green_dino_short.gif';\nimport yellow from './../img/yellow_dino_short.gif';\nimport red from './../img/red_dino_short.gif';\nimport Dino from './OneDino';\nexport default class DinoPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDinoPicking = pickedDino => {\n      console.log(pickedDino);\n      const remainingDinos = this.state.dinos.filter(d => d.color !== pickedDino);\n      this.setState({\n        dinos: remainingDinos\n      }, () => {\n        this.props.setPlayer(pickedDino);\n      }); // remonte au parent pour updte le player avec son dino \n    };\n\n    this.state = {\n      dinos: [{\n        color: 'red',\n        img: red\n      }, {\n        color: 'blue',\n        img: blue\n      }, {\n        color: 'green',\n        img: green\n      }, {\n        color: 'yellow',\n        img: yellow\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Dino Picker\"), React.createElement(\"div\", {\n      className: \"dinoPicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.dinos.map((dino, i) => React.createElement(Dino, {\n      img: dino.img,\n      key: i,\n      color: dino.color,\n      handleDinoPicking: this.handleDinoPicking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/clarabesset/Ironhack Paris/dino-discord/DinoDiscoord v2/dinodiscord/dinodiscordyes/frontend/src/components/DinoPicker.jsx"],"names":["React","Component","blue","green","yellow","red","Dino","DinoPicker","constructor","props","handleDinoPicking","pickedDino","console","log","remainingDinos","state","dinos","filter","d","color","setState","setPlayer","img","render","map","dino","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAYnBC,iBAZmB,GAYEC,UAAD,IAAgB;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,YAAMG,cAAc,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYR,UAAzC,CAAvB;AACA,WAAKS,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAEF;AAAR,OAAd,EAAuC,MAAM;AAC5C,aAAKL,KAAL,CAAWY,SAAX,CAAqBV,UAArB;AACA,OAFD,EAHmC,CAMlC;AACD,KAnBkB;;AAElB,SAAKI,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,CACN;AAAEG,QAAAA,KAAK,EAAE,KAAT;AAAgBG,QAAAA,GAAG,EAAEjB;AAArB,OADM,EAEN;AAAEc,QAAAA,KAAK,EAAE,MAAT;AAAiBG,QAAAA,GAAG,EAAEpB;AAAtB,OAFM,EAGN;AAAEiB,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,GAAG,EAAEnB;AAAvB,OAHM,EAIN;AAAEgB,QAAAA,KAAK,EAAE,QAAT;AAAmBG,QAAAA,GAAG,EAAElB;AAAxB,OAJM;AADK,KAAb;AAQA;;AAUDmB,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEoB,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,KACjB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,IAAI,CAACH,GAAhB;AAAqB,MAAA,GAAG,EAAEI,CAA1B;AAA6B,MAAA,KAAK,EAAED,IAAI,CAACN,KAAzC;AAAgD,MAAA,iBAAiB,EAAE,KAAKT,iBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFpB,CAFD,CADD;AAYA;;AAlCgD","sourcesContent":["import React, { Component } from 'react';\nimport blue from './../img/blue_dino_short.gif';\nimport green from './../img/green_dino_short.gif';\nimport yellow from './../img/yellow_dino_short.gif';\nimport red from './../img/red_dino_short.gif';\nimport Dino from './OneDino';\n\nexport default class DinoPicker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdinos: [\n\t\t\t\t{ color: 'red', img: red },\n\t\t\t\t{ color: 'blue', img: blue },\n\t\t\t\t{ color: 'green', img: green },\n\t\t\t\t{ color: 'yellow', img: yellow }\n\t\t\t]\n\t\t};\n\t}\n\n\thandleDinoPicking = (pickedDino) => {\n\t\tconsole.log(pickedDino)\n\t\tconst remainingDinos = this.state.dinos.filter(d => d.color !== pickedDino);\n\t\tthis.setState({dinos: remainingDinos}, () => {\n\t\t\tthis.props.setPlayer(pickedDino);\n\t\t})\n\t\t // remonte au parent pour updte le player avec son dino \n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Dino Picker</h1>\n\t\t\t\t<div className=\"dinoPicker\">\n\t\t\t\t\t{\n                        this.state.dinos.map((dino, i) => (\n                            <Dino img={dino.img} key={i} color={dino.color} handleDinoPicking={this.handleDinoPicking} />\n                        ))\n                    }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}