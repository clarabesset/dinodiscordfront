{"ast":null,"code":"var _jsxFileName = \"/Users/clarabesset/Documents/front dino/src/pages/Game.jsx\";\nimport React, { Component } from \"react\";\nimport Board from \"./../components/Board\";\nimport socketIO from \"socket.io-client\";\nimport { runInThisContext } from \"vm\";\nexport default class Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      socketResponse: null,\n      socket: null,\n      playersFromServer: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"here\");\n    this.setState({\n      socket: socketIO(process.env.REACT_APP_BACKEND_URL + \"/room\")\n    }, () => {\n      this.state.socket.on(\"confirm-player-join\", players => {\n        console.log(\"players from server ?\", players);\n        this.setState({\n          playersFromServer: players\n        });\n      });\n      this.state.socket.on(\"message\", data => {\n        console.log(\"ici\", data);\n      });\n    });\n    /*      setInterval(() => this.socket.emit('message', { message: 'My position is: ', position: { x: 3, y: 2 } }), 1000);\n     */\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"titleGame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Dino Discord\"), React.createElement(\"div\", {\n      class: \"boardContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Board, {\n      playersFromServer: this.state.playersFromServer,\n      socket: this.state.socket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/clarabesset/Documents/front dino/src/pages/Game.jsx"],"names":["React","Component","Board","socketIO","runInThisContext","Game","state","socketResponse","socket","playersFromServer","componentDidMount","console","log","setState","process","env","REACT_APP_BACKEND_URL","on","players","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,IAAjC;AACA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CK,KAD0C,GAClC;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,iBAAiB,EAAE;AAHb,KADkC;AAAA;;AAM1CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAKC,QAAL,CACE;AAAEL,MAAAA,MAAM,EAAEL,QAAQ,CAACW,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,OAArC;AAAlB,KADF,EAEE,MAAM;AACJ,WAAKV,KAAL,CAAWE,MAAX,CAAkBS,EAAlB,CAAqB,qBAArB,EAA4CC,OAAO,IAAI;AACrDP,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCM,OAArC;AACA,aAAKL,QAAL,CAAc;AAAEJ,UAAAA,iBAAiB,EAAES;AAArB,SAAd;AACD,OAHD;AAIA,WAAKZ,KAAL,CAAWE,MAAX,CAAkBS,EAAlB,CAAqB,SAArB,EAAgCE,IAAI,IAAI;AACtCR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBO,IAAnB;AACD,OAFD;AAGD,KAVH;AAaA;;AAED;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,iBAAiB,EAAE,KAAKd,KAAL,CAAWG,iBADhC;AAEE,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE,MAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF;AAWD;;AApCyC","sourcesContent":["import React, { Component } from \"react\";\nimport Board from \"./../components/Board\";\nimport socketIO from \"socket.io-client\";\nimport { runInThisContext } from \"vm\";\nexport default class Game extends Component {\n  state = {\n    socketResponse: null,\n    socket: null,\n    playersFromServer: []\n  };\n  componentDidMount() {\n    console.log(\"here\");\n    this.setState(\n      { socket: socketIO(process.env.REACT_APP_BACKEND_URL + \"/room\") },\n      () => {\n        this.state.socket.on(\"confirm-player-join\", players => {\n          console.log(\"players from server ?\", players);\n          this.setState({ playersFromServer: players });\n        });\n        this.state.socket.on(\"message\", data => {\n          console.log(\"ici\", data);\n        });\n      }\n    );\n\n    /*      setInterval(() => this.socket.emit('message', { message: 'My position is: ', position: { x: 3, y: 2 } }), 1000);\n     */\n  }\n  render() {\n    return (\n      <div className=\"gameContainer\">\n        <div class=\"titleGame\">Dino Discord</div>\n        <div class=\"boardContainer\">\n          <Board\n            playersFromServer={this.state.playersFromServer}\n            socket={this.state.socket}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}